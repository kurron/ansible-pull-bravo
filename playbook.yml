#!/usr/bin/env ansible-playbook

- name: Gather prerequisites
  hosts: all
  gather_facts: True
  tasks:
    - name: create groups based on distribution
      group_by: key={{ ansible_distribution }}

# https://www.digitalocean.com/community/tutorials/how-to-add-swap-on-ubuntu-14-04
- name: Add Swap File
  hosts: Ubuntu
  gather_facts: True
  become: True
  vars:
       guard_name: "swapfile"
       swap_size: "4G"
       swap_path: "/swapfile"
       swappiness: "vm.swappiness=10"
       inode: "vm.vfs_cache_pressure=50"
       guard_prefix: "ansible-swapfile"
       fallocate_guard: "/var/{{ guard_prefix }}-fallocate"
       mkswap_guard: "/var/{{ guard_prefix }}-mkswap"
       swapon_guard: "/var/{{ guard_prefix }}-swapon"
       swappiness_guard: "/var/{{ guard_prefix }}-swappiness"
       inode_guard: "/var/{{ guard_prefix }}-inode"
  tasks:
      - command: /usr/bin/fallocate --length {{ swap_size }} {{ swap_path }} creates={{ fallocate_guard }}
      - file: path={{ fallocate_guard }} state=touch
      - file: path={{ swap_path }} owner=root group=root mode=0600
      - command: /sbin/mkswap {{ swap_path }} creates={{ mkswap_guard }}
      - file: path={{ mkswap_guard }} state=touch
      - command: /sbin/swapon {{ swap_path }} creates={{ swapon_guard }}
      - file: path={{ swapon_guard }} state=touch
      - lineinfile: dest=/etc/fstab line="{{ swap_path }}   none    swap    sw    0   0"
      - command: /sbin/sysctl {{ swappiness }} creates={{ swappiness_guard }}
      - file: path={{ swappiness_guard }} state=touch
      - lineinfile: dest=/etc/sysctl.conf line="{{ swappiness }}"
      - command: /sbin/sysctl {{ inode }} creates={{ inode_guard }}
      - file: path={{ inode_guard }} state=touch
      - lineinfile: dest=/etc/sysctl.conf line="{{ inode }}"

- name: Configure the Docker Partition
  hosts: Ubuntu
  become: True
  vars:
       device_name: "/dev/sdb"
       group_name: "docker"
       volume_name: "storage"
       volume_size: "7G"
       mount_point: "/var/lib/docker"
       guard_prefix: "ansible-docker-partition"
       pvcreate_guard: "/var/{{ guard_prefix }}-pvcreate"
       vgcreate_guard: "/var/{{ guard_prefix }}-vgcreate"
       lvcreate_guard: "/var/{{ guard_prefix }}-lvcreate"
       mkfs_guard: "/var/{{ guard_prefix }}-mkfs"
  tasks:
      - apt: name=xfsprogs state=present update_cache=true cache_valid_time=3600 install_recommends=true
      - apt: name=lvm2 state=present update_cache=true cache_valid_time=3600 install_recommends=true
      - command: /sbin/pvcreate {{ device_name }} creates={{ pvcreate_guard }}
      - file: path={{ pvcreate_guard }} state=touch
      - command: /sbin/vgcreate {{ group_name }} {{ device_name }} creates={{ vgcreate_guard }}
      - file: path={{ vgcreate_guard }} state=touch
      - command: /sbin/lvcreate --name {{ volume_name }} --size {{ volume_size }} {{ group_name }} creates={{ lvcreate_guard }}
      - file: path={{ lvcreate_guard }} state=touch
      - command: /sbin/mkfs.xfs /dev/{{ group_name }}/{{ volume_name }} creates={{ mkfs_guard }}
      - file: path={{ mkfs_guard }} state=touch
      - mount: name={{ mount_point }} src=/dev/{{ group_name }}/{{ volume_name }} fstype=xfs opts=noatime state=mounted

- name: Install Docker
  hosts: Ubuntu
  become: True
  vars:
       user_account: vagrant
       compose_version: "1.7.1"
#      This must match the mount point that is used by the LVM creation task
       mount_point: /var/lib/docker
       guard_prefix: "ansible-docker"
       service_guard: "/var/{{ guard_prefix }}-service"
       registry_host: "should be set as an extra vars argument"
       registry_password: "should be set as an extra vars argument"
  tasks:
      - apt: name=curl state=latest update_cache=true cache_valid_time=600
      # we can't use Ansible to grab the file because Docker has issues with its digital certificate
      - command: /usr/bin/curl --location --output /root/install-docker https://get.docker.com/ creates=/root/install-docker
      - file: path=/root/install-docker owner=root group=root mode=0500
      - shell: /root/install-docker creates=/usr/bin/docker
      - lineinfile: dest=/etc/default/grub regexp='^GRUB_CMDLINE_LINUX=""' line='GRUB_CMDLINE_LINUX="cgroup_enable=memory swapaccount=1"'
      - command: /usr/sbin/update-grub
      - lineinfile: dest=/etc/default/docker line='DOCKER_OPTS="-H tcp://0.0.0.0:2375 -H unix:///var/run/docker.sock --storage-driver=overlay --graph={{ mount_point }}"'
      - user: name={{ user_account }} groups=docker append=yes
      - command: service docker restart creates={{ service_guard }}
      - file: path={{ service_guard }} state=touch
      - command: docker run hello-world

      # we can't use Ansible to grab the file because Docker has issues with its digital certificate
      - shell: /usr/bin/curl --location --output /usr/local/bin/docker-compose https://github.com/docker/compose/releases/download/{{ compose_version }}/docker-compose-`uname -s`-`uname -m` creates=/usr/local/bin/docker-compose
      - file: path=/usr/local/bin/docker-compose owner=root group=root mode=0555
      - command: docker-compose --version

      - template: src=templates/registry.json dest=/home/{{ user_account }}/.dockercfg mode=0544 backup=no force=yes

- name: Install Docker Credentials
  hosts: Ubuntu
  become: True
  vars:
       user_account: vagrant
       registry_host: "EXPECTED TO BE SOURCED VIA THE ENVIRONMENT"
       registry_password: "EXPECTED TO BE SOURCED VIA THE ENVIRONMENT"
  tasks:
      - debug: msg="host={{ registry_host }}, password= {{ registry_password }}"
      - template: src=templates/registry.json dest=/home/{{ user_account }}/.dockercfg mode=0544 backup=no force=yes

- name: Install Self-Signed Certificate
  hosts: Ubuntu
  become: True
  tasks:
      - file: path=/usr/local/share/ca-certificates/docker-registry state=directory
      - file: path=/etc/ssl/certs/ state=directory
      - get_url: >
                url=http://192.168.254.81:81/artifactory/static/ease/docker-registry/certifcate/registry.transparent.CA.crt
                dest=/usr/local/share/ca-certificates/docker-registry/registry.transparent.CA.crt
      - shell: update-ca-certificates

- name: Pull Down Docker Containers
  hosts: Ubuntu
  become: False
  tags:
  - images
  vars:
       mold_e_event_processor_tag: 1.0.767.MILESTONE
  tasks:
      - docker_image:
            name: "registry.transparent.com/mold-e-reporting-event-processor"
            tag: "{{ mold_e_event_processor_tag }}"
            tls: True
